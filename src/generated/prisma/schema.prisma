// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  score        Score?
  actions      Action[]
  events       Event[]
  trustLevel   TrustLevel @relation(fields: [trustLevelId], references: [id])
  trustLevelId String
}

model Score {
  id           String   @id @default(uuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])
  value        Float
  lastUpdated  DateTime @default(now())
  totalActions Int      @default(0)
  actionCounts Json     @default("{}")
  lastActivity DateTime @default(now())

  @@index([value])
  @@index([lastActivity])
}

model Action {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  type        String
  targetId    String
  metadata    Json?
  timestamp   DateTime @default(now())
  scoreChange Float

  @@index([userId, timestamp])
  @@index([type, timestamp])
}

model Event {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  type      String // 'action' | 'score_change' | 'trust_change' | 'decay' | 'custom'
  timestamp DateTime @default(now())
  data      Json

  @@index([userId, timestamp])
  @@index([type, timestamp])
}

model TrustLevel {
  id           String   @id @default(uuid())
  name         String   @unique
  minScore     Float
  actionWeight Float    @default(1)
  decayRate    Float    @default(0)
  badge        String?
  privileges   String[]
  users        User[]
}
